# Archivo: .github/workflows/docker-build-push.yml

name: CI/CD con DevSecOps

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Detección de Secretos con GitGuardian
        # Este paso previene que credenciales se filtren en el historial de Git.
        # Fallará si encuentra secretos, protegiendo tus credenciales.
        uses: gitguardian/ggshield-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar Python para el backend
        # Esencial para instalar las dependencias y ejecutar el escaneo de Snyk.
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Instalar dependencias del backend
        run: pip install -r backend/requirements.txt

      - name: Análisis de Composición (SCA) y SAST con Snyk
        # Escanea dependencias y código por vulnerabilidades conocidas.
        uses: snyk/actions/python@master
        with:
          args: --scan-args="--json-file-output=snyk-python.json"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Construir y escanear imagen del frontend con Trivy
        # Construye la imagen y luego la escanea para detectar vulnerabilidades en la imagen base y los paquetes.
        # El pipeline falla si Trivy encuentra vulnerabilidades Críticas o de Alta severidad.
        run: |
          docker build -t uraken4/devops-demo-frontend:latest ./frontend
          docker run --rm -v $(pwd):/scan aquasec/trivy:0.43.1 --severity HIGH,CRITICAL --format table uraken4/devops-demo-frontend:latest

      - name: Construir y escanear imagen del backend con Trivy
        # Repite el mismo proceso para el backend.
        run: |
          docker build -t uraken4/devops-demo-backend:latest ./backend
          docker run --rm -v $(pwd):/scan aquasec/trivy:0.43.1 --severity HIGH,CRITICAL --format table uraken4/devops-demo-backend:latest

      - name: Log in a Docker Hub
        # Este paso es el único que requiere tus credenciales.
        # Se ejecuta después de que todos los escaneos de seguridad han pasado con éxito.
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Push de las imágenes a Docker Hub
        run: |
          docker push uraken4/devops-demo-frontend:latest
          docker push uraken4/devops-demo-backend:latest
